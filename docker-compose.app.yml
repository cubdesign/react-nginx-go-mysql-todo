version: "3"

services:

  node:
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    #    restart: on-failure
    container_name: node_container
    tty: true
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - LETSENCRYPT_TEST=${LETSENCRYPT_TEST}
    volumes:
      - ./frontend:/app/frontend
    # command: sh -c "cd /app/frontend && yarn install && yarn start"
    ports:
      - "3000:3000"
    networks:
      - front_bridge

  go:
    build:
      context: .
      dockerfile: ./docker/golang/Dockerfile
    #    restart: on-failure
    container_name: go_container
    ports:
      - "8080:8080"
    depends_on:
      - "mysql"
    tty: true
    volumes:
      - ./backend:/app/backend
    networks:
      - front_bridge
      - back_bridge

  mysql:
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    #    restart: on-failure
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: "Asia/Tokyo"
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - back_bridge

networks:
  front_bridge:
    external: true
  back_bridge:
    external: true

volumes:
  mysql-data:

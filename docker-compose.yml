version: "3"

services:

  node:
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    container_name: node_container
    tty: true
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${LETSENCRYPT_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      - LETSENCRYPT_TEST=true
      - CERT_NAME=default
    volumes:
      - ./frontend:/app/frontend
    # command: sh -c "cd /app/frontend && yarn install && yarn start"
    ports:
      - "3000:3000"

  go:
    build:
      context: .
      dockerfile: ./docker/golang/Dockerfile
    container_name: go_container
    ports:
      - "8080:8080"
    tty: true
    volumes:
      - ./backend:/app/backend

  mysql:
    build:
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: "Asia/Tokyo"
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    links:
      - go

  nginx-proxy:
    image: jwilder/nginx-proxy
#    restart: on-failure
    container_name: "nginx_proxy_container"
    volumes:
      - nginx-proxy-data:/etc/nginx/vhost.d
      - nginx-proxy-data:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs:ro
    ports:
      - "00:80"
      - "443:443"
    depends_on:
      - "go"
      - "node"
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"

  letsencrypt-nginx:
    image: jrcs/letsencrypt-nginx-proxy-companion
#    restart: on-failure
    container_name: "letsencrypt_nginx_container"
    volumes:
      - nginx-proxy-data:/etc/nginx/vhost.d
      - nginx-proxy-data:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/nginx/certs:rw
    depends_on:
      - "nginx-proxy"

volumes:
  mysql-data:
  nginx-proxy-data:
